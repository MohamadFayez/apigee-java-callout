<ProxyEndpoint name="endpoint1">
  <Description>Proxy for Java callout for XML Digital Signature</Description>
  <HTTPProxyConnection>
    <BasePath>/xmldsig</BasePath>
    <Properties/>
    <VirtualHost>secure</VirtualHost>
  </HTTPProxyConnection>

  <FaultRules/>
  <DefaultFaultRule>
    <AlwaysEnforce>true</AlwaysEnforce>
    <Step>
      <Name>AM-Inject-Proxy-Revision-Header</Name>
    </Step>
  </DefaultFaultRule>

  <PreFlow name="PreFlow">
    <Request/>
    <Response>

      <Step>
        <Name>AM-Clean-Request-Headers-From-Response</Name>
      </Step>
    </Response>
  </PreFlow>

  <PostFlow name="PostFlow">
    <Request/>
    <Response>

      <Step>
        <Name>AM-Inject-Proxy-Revision-Header</Name>
      </Step>
    </Response>
  </PostFlow>

  <Flows>
    <Flow name="sign1">
      <Request>
        <Step>
          <Condition>NOT((request.header.content-type =| "text/xml") OR (request.header.content-type =| "application/xml" ))</Condition>
          <Name>RF-InvalidRequest</Name>
        </Step>
      </Request>
      <Response>
        <Step>
          <Name>AM-PrivateKey1</Name>
        </Step>
        <Step>
          <Name>Java-XMLDSIG-Sign</Name>
        </Step>
        <Step>
          <Name>AM-SignatureResponse</Name>
        </Step>
      </Response>
      <Condition>(proxy.pathsuffix ~ "/sign1") and (request.verb = "POST")</Condition>
    </Flow>

    <Flow name="sign2">
      <Request>
        <Step>
          <Condition>NOT((request.header.content-type =| "text/xml") OR (request.header.content-type =| "application/xml" ))</Condition>
          <Name>RF-InvalidRequest</Name>
        </Step>
      </Request>
      <Response>
        <Step>
          <Name>AM-PrivateKey2</Name>
        </Step>
        <Step>
          <Name>Java-XMLDSIG-Sign</Name>
        </Step>
        <Step>
          <Name>AM-SignatureResponse</Name>
        </Step>
      </Response>
      <Condition>(proxy.pathsuffix ~ "/sign2") and (request.verb = "POST")</Condition>
    </Flow>

    <Flow name="sign3">
      <Request>
        <Step>
          <Condition>NOT((request.header.content-type =| "text/xml") OR (request.header.content-type =| "application/xml" ))</Condition>
          <Name>RF-InvalidRequest</Name>
        </Step>
      </Request>
      <Response>
        <Step>
          <Name>AM-PrivateKey3-And-Cert</Name>
        </Step>
        <Step>
          <Name>Java-XMLDSIG-Sign-With-Embedded-Cert-And-Issuer-Serial</Name>
        </Step>
        <Step>
          <Name>AM-SignatureResponse</Name>
        </Step>
      </Response>
      <Condition>(proxy.pathsuffix ~ "/sign3") and (request.verb = "POST")</Condition>
    </Flow>

    <Flow name="validate1">
      <Request>
        <Step>
          <Condition>NOT((request.header.content-type =| "text/xml") OR (request.header.content-type =| "application/xml" ))</Condition>
          <Name>RF-InvalidRequest</Name>
        </Step>
      </Request>
      <Response>
        <Step>
          <Name>AM-PublicKey1</Name>
        </Step>
        <Step>
          <Name>Java-XMLDSIG-Validate</Name>
        </Step>
        <Step>
          <Name>AM-ValidationResponse</Name>
        </Step>
      </Response>
      <Condition>(proxy.pathsuffix ~ "/validate1") and (request.verb = "POST")</Condition>
    </Flow>

    <Flow name="validate2">
      <Request>
        <Step>
          <Condition>NOT((request.header.content-type =| "text/xml") OR (request.header.content-type =| "application/xml" ))</Condition>
          <Name>RF-InvalidRequest</Name>
        </Step>
      </Request>
      <Response>
        <Step>
          <Name>AM-PublicKey2</Name>
        </Step>
        <Step>
          <Name>Java-XMLDSIG-Validate</Name>
        </Step>
        <Step>
          <Name>AM-ValidationResponse</Name>
        </Step>
      </Response>
      <Condition>(proxy.pathsuffix ~ "/validate2") and (request.verb = "POST")</Condition>
    </Flow>

    <Flow name="validate3">
      <Request>
        <Step>
          <Condition>NOT((request.header.content-type =| "text/xml") OR (request.header.content-type =| "application/xml" ))</Condition>
          <Name>RF-InvalidRequest</Name>
        </Step>
      </Request>
      <Response>
        <Step>
          <Name>Java-XMLDSIG-Validate-Via-Embedded-Cert</Name>
        </Step>
        <Step>
          <Name>AM-ValidationResponse</Name>
        </Step>
      </Response>
      <Condition>(proxy.pathsuffix ~ "/validate3") and (request.verb = "POST")</Condition>
    </Flow>

    <Flow name="unknown">
      <Description>Unknown request</Description>
      <Request>
        <Step>
          <Name>RaiseFault-UnknownRequest</Name>
        </Step>
      </Request>
      <Response/>
    </Flow>

  </Flows>

  <RouteRule name="LoopbackRoute">
  </RouteRule>

</ProxyEndpoint>
